{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"DROID (Digital Record and Object Identification)","google":"","name":"Droid","body":"DROID is a software tool developed by [The National Archives](http://www.nationalarchives.gov.uk/ \"The National Archives Website\") to perform automated batch identification of file formats. Developed by its Digital Preservation Department as part of its broader digital preservation activities, DROID is designed to meet the fundamental requirement of any digital repository to be able to identify the precise format of all stored digital objects, and to link that identification to a central registry of technical information about that format and its dependencies.\r\n\r\nDROID uses internal signatures to identify and report the specific file format versions of digital files. These signatures are stored in an XML signature file, generated from information recorded in the [PRONOM technical registry](http://www.nationalarchives.gov.uk/PRONOM/Default.aspx \"PRONOM Technical Registry\"). New and updated signatures are regularly added to PRONOM, and DROID can be configured to automatically download updated signature files.\r\n\r\nThe DROID binary zip file is available to download from the [dedicated page on The National Archives website](http://www.nationalarchives.gov.uk/information-management/projects-and-work/droid.htm \"DROID download page\").\r\n\r\nDROID is a platform-independent Java application. It can be invoked from two interfaces:\r\n\r\n* Java Swing GUI\r\n* Command line interface\r\n\r\nDROID allows files and folders to be selected from a file system for identification. This file list can be saved at any point. After the identification process had been run, the results can be output in various report formats, including CSV.\r\n\r\n### User requirements\r\n\r\nDROID requires Java 6 Standard Edition (SE). DROID was built and tested on Java 1.6 update 30. DROID **will not** function in a Java 7 environment. \r\n\r\nSignature Files and their release notes can be found at the following links: \r\n\r\n### Signature files\r\n\r\nhttp://www.nationalarchives.gov.uk/aboutapps/pronom/droid-signature-files.htm\r\n\r\n### Signature file release notes\r\n\r\nhttp://www.nationalarchives.gov.uk/aboutapps/pronom/release-notes.xml\r\n\r\n### Code structure\r\n\r\nThe DROID code base is split up into separate projects, to facilitate only using parts of the DROID code that are required, and to enhance and enforce modularity in its construction:\r\n\r\n```\r\nDroid-binary                          Additional files required in a release build\r\nDroid-build-tools-TRUNK               A maven project to package the release\r\nDroid-command-line                    Command-line control over DROID\r\nDroid-container                       Container signature processing\r\nDroid-core                            Binary signature processing\r\nDroid-core-interfaces                 Resource processing & format recognition\r\nDroid-export                          Export droid profiles to CSV\r\nDroid-export-interfaces               Interfaces for export of DROID profiles\r\nDroid-help                            JavaHelp for DROID\r\nDroid-parent                          An empty parent project for the other projects\r\nDroid-report                          Reporting for DROID profiles\r\nDroid-report-interfaces               Interfaces for DROID reporting\r\nDroid-results                         Profile handling, database and filtering\r\nDroid-swing-ui                        Swing GUI control over DROID\r\n```\r\n\r\n### Third-party dependencies\r\n\r\n```\r\nbeansbinding-1.2.1                    Binds data to GUI controls\r\norg.openide.util-1                    Netbeans platform support\r\nswing-outline-1.4.1                   Netbeans Swing GUI tree table control, part of the Netbeans platform\r\n```\r\n\r\nThe required jars can be found in the binary distribution of DROID. \r\n\r\n### Building DROID\r\n\r\nDROID was built using Apache Maven 3. First make sure that this is installed\r\nand if behind a proxy, edit the Maven settings.xml file to reflec the proxy\r\nserver details. \r\n\r\nThere are an additional three jar files required, as listed in the dependencies\r\nsection above. \r\n\r\nThese can be installed to your Maven repository from their respective locations \r\nusing the following commands:\r\n\r\n```\r\nmvn install:install-file -Dfile=beansbinding-1.2.1.jar -DgroupId=beansbinding -DartifactId=beansbinding -Dversion=1.2.1 -Dpackaging=jar \r\nmvn install:install-file -Dfile=org-openide-util-1.jar -DgroupId=org.openide -DartifactId=org-openide-util -Dversion=1 -Dpackaging=jar \r\nmvn install:install-file -Dfile=swing-outline-1.4.1.jar -DgroupId=org.openide -DartifactId=swing-outline -Dversion=1.4.1 -Dpackaging=jar \r\n```\r\n\r\nOnce this is complete you can use the master build file under the main DROID\r\nproject folder to build the project. This is the pom.xml that sits under\r\nthe main DROID folder containing all the sub projects. \r\n\r\nSimply run, \"mvn install\" from the command line when in this directory and DROID\r\nwill build. Follow the Maven output to see where Maven has placed the binaries.\r\n\r\n### Release Notes\r\n\r\n#### DROID 6.1\r\n\r\nThe largest change to DROID in this release is the addition of a 'No-profile' mode which can also be read into as a 'No Database' mode for quicker identification of resources provided to DROID for identification. The focus of the output of this mode is to provide a no-frills CSV output to form part of workflow stages in preservation systems or elsewhere. \r\n\r\n```\r\nCLI:           - No-profile mode added to command line\r\n               - No-profile mode standard file signature matching\r\n               - No-profile mode container file signature matching\r\n               - No-profile mode extension matching to pre-filter contents of folders for identification\r\n               - CLI options reordered for usability\r\n\r\nUnit Tests:    - Fixed to enable build on Windows/Linux\r\n\r\nByteseek:      - Library forked to remove external dependency in DROID\r\n               - 'Any' bit mask bug fixed in byteseek code\r\n\r\nBug fixes:     - BOF/EOF bug where DROID wasn't respecting anchors as part of it's matching \r\n                 attempts has been fixed\r\n\r\nMaven:         - Builds using Maven 3.0\r\n\r\nDerby:         - Updated from version 10.7.1.1 to 10.8.2.2\r\n\r\n```"}